@page "/counter"
@using U2pa.Electron.Link

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @progressState.CurrentProgress</p>
<p role="status">State: @progressState.CurrentProgressBarShout</p>
<p><progress value="@progressState.CurrentProgress" max="@progressState.MaxProgress"></progress></p>


<button class="btn btn-primary" @onclick="Start">Start</button>

@code {
    private GuiState progressState;
    private bool currentlyCounting = false;

    protected override void OnInitialized()
    {
        progressState = new GuiState(Tick);
    }

    private void Tick(object? _)
    {
        InvokeAsync(StateHasChanged);
    }

    private async void Start()
    {
        if (currentlyCounting)
            return;

        currentlyCounting = true;
        progressState.Reset();
        using (var progressBar = new GuiProgressBar(progressState))
        {
            progressBar.Init(100);

            var endState = await Task<string>.Run(() =>
            {
                for (var i = 0; i < 100; i++)
                {
                    progressBar.Progress();
                    if(i == 50)
                      progressBar.Shout("We're half way there!");
                    if(i == 60)
                      progressBar.Shout("Ooooh!");
                    if(i == 70)
                      progressBar.Shout("Wooooooh!");
                    if(i == 80)
                      progressBar.Shout("Living on a prayer!");
                    var stamp = DateTime.Now.AddMilliseconds(100);
                    while (DateTime.Now < stamp) ;
                }
                return "Done!";
            });
            progressBar.Shout(endState);
        }
        Tick(null);

        currentlyCounting = false;
    }
}
